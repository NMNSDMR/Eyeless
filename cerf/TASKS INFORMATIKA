def count_valid_chains(N):
    # Создаем массив dp размером N+1 для хранения количества валидных цепочек длины i
    dp = [0] * (N + 1)
    
    # Инициализируем базовые случаи
    dp[0] = 1  # 0 цифр => 1 способ (пустая цепочка)
    dp[1] = 2  # 1 цифра => 2 способа (0 или 1)
    
    # Заполняем массив dp
    for i in range(2, N + 1):
        # Количество валидных цепочек длины i равно сумме двух предыдущих
        dp[i] = dp[i - 1] + dp[i - 2]
    
    return dp[N]

# Пример использования
N = 5  # Количество цифр в цепочке
result = count_valid_chains(N)
print("Количество валидных цепочек из", N, "нулей и единиц, где нет двух стоящих подряд единиц:", result)

N = 5  # Длина цепочки

# Инициализация переменных для первых двух значений
prev_count = 2
current_count = 3

# Находим количество цепочек длины N
for i in range(3, N + 1):
    # Вычисляем новое количество цепочек как сумму двух предыдущих
    next_count = prev_count + current_count
    # Обновляем значения для следующей итерации
    prev_count = current_count
    current_count = next_count

print("Количество цепочек длины", N, "без двух стоящих подряд единиц:", current_count)

