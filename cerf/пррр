def posUp(servo_pin2, servo_pin1, servo_pin5, servo_pin4, servo_pin3):
    n1 = -70
    n2 = 40
    direction = 1
    
    # Move towards upper cell
    while True:
        set_angle_two_servo(n1, servo_pin2, servo_pin1)
        set_angle_two_servo(n2, servo_pin5, servo_pin4)
        
        n1 += 3 * direction
        n2 -= 1 * direction
        time.sleep(0.05)
        
        if (direction == 1 and (n1 >= 45 or n2 <= -15)) or (direction == -1 and (n1 <= -70 or n2 >= 40)):
            break
    time.sleep(1)
    
    # Grab the cube
    set_angle(0, servo_pin3)
    time.sleep(2)
    
    # Smoothly return to starting position
    while True:
        set_angle_two_servo(n1, servo_pin2, servo_pin1)
        set_angle_two_servo(n2, servo_pin5, servo_pin4)
        
        # Gradually decrease the angles
        n1 -= 2 * direction
        n2 += 1 * direction
        time.sleep(0.05)
        
        # Check if reaching the zero position
        if (direction == 1 and (n1 >= -70 or n2 <= 40)) or (direction == -1 and (n1 <= 45 or n2 >= -70)):
            break
    time.sleep(1)
    
    # Return to zero position
    posZero(servo_pin2, servo_pin1, servo_pin5, servo_pin4)

def posMd(servo_pin2, servo_pin1, servo_pin5, servo_pin4, servo_pin3):
    n1 = -70
    n2 = 40
    
    # Move towards middle cell
    while n1 != 45 and n2 != -45:
        set_angle_two_servo(n1, servo_pin2, servo_pin1)
        set_angle_two_servo(n2, servo_pin5, servo_pin4)
        n1 += 3
        n2 -= 2
        time.sleep(0.05)
        if n1 >= 45 or n2 <= -45:
            break
    time.sleep(1)
    
    # Grab the cube
    set_angle(0, servo_pin3)
    time.sleep(2)
    
    # Smoothly return to starting position
    set_angle_two_servo(n1 + 100, servo_pin2, servo_pin1)
    set_angle_two_servo(n2 + 100, servo_pin5, servo_pin4)
    time.sleep(1)
    posZero(servo_pin2, servo_pin1, servo_pin5, servo_pin4)

def posBt(servo_pin2, servo_pin1, servo_pin5, servo_pin4, servo_pin3):
    n1 = -70
    n2 = 40
    
    # Move towards bottom cell
    while n1 != 45 and n2 != -70:
        set_angle_two_servo(n2, servo_pin5, servo_pin4)
        set_angle_two_servo(n1, servo_pin2, servo_pin1)
        n1 += 3
        n2 -= 2
        time.sleep(0.05)
        if n1 >= 45 or n2 <= -70:
            break
    time.sleep(1)
    
    # Grab the cube
    set_angle(0, servo_pin3)
    time.sleep(2)
    
    # Smoothly return to starting position
    set_angle_two_servo(n1 + 0, servo_pin2, servo_pin1)
    set_angle_two_servo(n2 + 0, servo_pin5, servo_pin4)
    time.sleep(1)
    posZero(servo_pin2, servo_pin1, servo_pin5, servo_pin4)

def posZero(servo_pin2, servo_pin1, servo_pin5, servo_pin4):
    set_angle_two_servo(-70, servo_pin2, servo_pin1)  # -30
    set_angle_two_servo(40, servo_pin5, servo_pin4)  # 40